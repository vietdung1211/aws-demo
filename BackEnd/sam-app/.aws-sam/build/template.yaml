AWSTemplateFormatVersion: 2010-09-09
Description: sam-app
Transform:
- AWS::Serverless-2016-10-31
Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowMethods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
      AllowHeaders: '''Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'''
      AllowOrigin: '''*'''
Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/products/get-all-items.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ProductTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: ProductTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllItemsFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/products/get-by-id.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ProductTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: ProductTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
      CodeUri: getByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/products/put-item.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ProductTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: ProductTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
      CodeUri: putItemFunction
  updateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/products/update-item.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ProductTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: ProductTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: PUT
      CodeUri: updateItemFunction
  deleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/products/delete-item.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ProductTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: ProductTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: DELETE
      CodeUri: deleteItemFunction
  getAllUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user/get-all-user.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user
            Method: GET
      CodeUri: getAllUserFunction
  getUserByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user/get-user-by-id.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: GET
      CodeUri: getUserByIdFunction
  putUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user/put-user.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user
            Method: POST
      CodeUri: putUserFunction
  updateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user/update-user.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: PUT
      CodeUri: updateUserFunction
  deleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user/delete-user.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: DELETE
      CodeUri: deleteUserFunction
  loginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/login/login.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - AmazonAPIGatewayInvokeFullAccess
      - AmazonAPIGatewayAdministrator
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /login
            Method: GET
      CodeUri: loginFunction
  testFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/login/login.handler
      Runtime: nodejs12.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - AmazonAPIGatewayInvokeFullAccess
      - AmazonAPIGatewayAdministrator
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /login/{username}
            Method: GET
      CodeUri: testFunction
  ProductTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  UserTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
